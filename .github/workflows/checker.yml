name: Verificador de Lan√ßamentos Gato Toons

on:
  schedule:
    # Roda a cada 15 minutos (sinta-se √† vontade para ajustar)
    # Nota: A√ß√µes do GitHub podem ter pequenos atrasos.
    - cron: '*/15 * * * *'
  workflow_dispatch: # Permite rodar manualmente pela aba "Actions" para testes

jobs:
  verificar:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o c√≥digo do seu reposit√≥rio para a m√°quina virtual
      - name: Baixar o c√≥digo
        uses: actions/checkout@v4

      # 2. Configura o ambiente Python na vers√£o especificada
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Instala as bibliotecas Python necess√°rias listadas no requirements.txt
      - name: Instalar depend√™ncias
        run: pip install -r requirements.txt

      # 4. Executa o nosso rob√¥!
      - name: Rodar o Scraper
        # <-- MUDAN√áA PRINCIPAL AQUI
        # Fornecemos os DOIS secrets que o script Python espera.
        env:
          DISCORD_WEBHOOK_CANAL_PRINCIPAL: ${{ secrets.DISCORD_WEBHOOK_CANAL_PRINCIPAL }}
          DISCORD_WEBHOOK_CANAL_SECUNDARIO: ${{ secrets.DISCORD_WEBHOOK_CANAL_SECUNDARIO }}
        # Certifique-se de que o nome do seu arquivo Python √© 'bot.py'
        run: python bot.py

      # 5. Salva o arquivo de mem√≥ria (lancados.json) de volta no reposit√≥rio
      # Esta etapa √© crucial para que o bot lembre o que j√° foi anunciado.
      - name: Salvar a mem√≥ria (lancados.json)
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add lancados.json
          # Apenas faz o commit se houver alguma mudan√ßa real no arquivo
          git diff --staged --quiet || git commit -m "üìù Atualiza a lista de cap√≠tulos lan√ßados"
          git push
